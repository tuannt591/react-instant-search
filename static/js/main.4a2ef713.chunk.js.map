{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","value","setValue","listPackage","setListPackage","callApi","keyword","a","url","fetch","res","json","data","packages","className","type","placeholder","onChange","event","handleSearch","target","length","map","item","name","description","downloads","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAyEeA,MAtEf,WAEE,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAgB,IAAtD,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAENC,EAFM,qDAE8CF,GAF9C,SAGMG,MAAMD,GAHZ,cAGNE,EAHM,gBAIOA,EAAIC,OAJX,OAINC,EAJM,OAKZR,EAAeQ,EAAKC,UALR,uHAAH,sDAsBb,OACI,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,uBAAOC,KAAK,OAAOC,YAAY,YAAYF,UAAU,eAAeb,MAAOA,EACpEgB,SAAU,SAAAC,IAfJ,SAACjB,GAChBA,GACFI,EAAQJ,GACRC,EAASD,KAETC,EAAS,IACTE,EAAe,KAUFe,CAAaD,EAAME,OAAOnB,YAGrC,qBAAKa,UAAU,sBAAf,SACE,qBAAKA,UAAU,qBAAf,SAEIX,EAAYkB,OAAS,GAAKlB,EAAYmB,KAAI,SAACC,GACzC,OAAO,qBAAKT,UAAU,qBAAf,SACL,qBAAKA,UAAU,sBAAf,SACE,+BACE,qBAAIA,UAAU,eAAd,UACE,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,uBAAhB,SAAwCS,EAAKC,UAE/C,qBAAIV,UAAU,eAAd,UACE,sBAAMA,UAAU,qBAAhB,0BACA,sBAAMA,UAAU,uBAAhB,SAAwCS,EAAKE,iBAE/C,qBAAIX,UAAU,eAAd,UACE,sBAAMA,UAAU,qBAAhB,wBACA,sBAAMA,UAAU,uBAAhB,SAAwCS,EAAKG,eAE/C,qBAAIZ,UAAU,eAAd,UACE,sBAAMA,UAAU,qBAAhB,iBACA,sBAAMA,UAAU,uBAAhB,SAAwCS,EAAKI,cAjBLJ,EAAKI,eC5BtDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a2ef713.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [value, setValue] = useState<string>('');\n  const [listPackage, setListPackage] = useState<any[]>([]);\n\n  const callApi = async (keyword: string) => {\n    try {\n      const url = `https://fast-npm-search.xyz/packages?input=${keyword}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setListPackage(data.packages)\n    } catch (e) {\n      throw e\n    }\n  };\n\n  const handleSearch = (value: string) => {\n    if (value) {\n      callApi(value);\n      setValue(value);\n    } else {\n      setValue('');\n      setListPackage([]);\n    }\n\n  };\n\n  return (\n      <div className=\"instantSearch\">\n        <div className=\"instantSearch__input\">\n          <input type=\"text\" placeholder=\"Search...\" className=\"form-control\" value={value}\n                 onChange={event => {\n                   handleSearch(event.target.value)\n                 }}/>\n        </div>\n        <div className=\"instantSearch__main\">\n          <div className=\"instantSearch__row\">\n            {\n              listPackage.length > 0 && listPackage.map((item: any) => {\n                return <div className=\"instantSearch__col\" key={item.id}>\n                  <div className=\"instantSearch__item\">\n                    <ul>\n                      <li className='d-flex pb-10'>\n                        <span className='bold black-1 mr-15'>name:</span>\n                        <span className=\"medium black-1 flex1\">{item.name}</span>\n                      </li>\n                      <li className='d-flex pb-10'>\n                        <span className='bold black-1 mr-15'>description:</span>\n                        <span className=\"medium black-1 flex1\">{item.description}</span>\n                      </li>\n                      <li className='d-flex pb-10'>\n                        <span className='bold black-1 mr-15'>downloads:</span>\n                        <span className=\"medium black-1 flex1\">{item.downloads}</span>\n                      </li>\n                      <li className='d-flex pb-10'>\n                        <span className='bold black-1 mr-15'>id:</span>\n                        <span className=\"medium black-1 flex1\">{item.id}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              })\n            }\n          </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}